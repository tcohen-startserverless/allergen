---
import { Resource } from "sst";
import { hc } from "hono/client";
import type { AppType } from "@functions/api";
import Layout from "src/layouts/Layout.astro";

interface Props {
    id: string;
    name: string;
}

const { id, name } = Astro.params;
if (!id || !name) return Astro.error(404, "Not Found");
const api = Resource.Api.url;
const client = hc<AppType>(api);
const res = await client.restaurant.$get({
    query: {
        restaurantId: id,
    },
});
if (!res.ok) return Astro.error(404, "Not Found");
const results = await res.json();
const [restaurant] = results.restaurant;
if (!restaurant) return Astro.error(404, "Not Found");
const menu = results.menu.pop();
---

<Layout title="Allergen">
    <main>
        <h1>{restaurant.name}</h1>
        {
            menu ? (
                <p>{menu.data}</p>
            ) : (
                <div>
                    <p>No menu found</p>
                    <button scrape-menu-button>Scrape Menu</button>
                    <button structure-menu-button>Structure Menu</button>
                </div>
            )
        }
    </main>
</Layout>

<script>
    import { Resource } from "sst";
    import { hc } from "hono/client";
    import type { AppType } from "@functions/api";
    const api = Resource.Api.url;
    const client = hc<AppType>(api);

    const scrapeMenu = async () => {
        const res = await client.restaurant.$get({});
        if (!res.ok) return;
    };
    const scrapeMenuButton = document.querySelector("[scrape-menu-button]");
    if (!scrapeMenuButton) return;
    scrapeMenuButton.addEventListener("click", scrapeMenu);
    function structureMenu() {
        // Trigger structure menu endpoint
    }
</script>

<style>
    body {
        background-color: #f4f4f2;
        font-family: Arial, sans-serif;
    }

    main {
        margin: 2rem auto;
        display: flex;
        flex-direction: column;
        align-items: center;
        padding: 1rem;
        width: 100%;
        max-width: 800px;
        background: #ffffff;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
        border-radius: 8px;
    }

    h1 {
        font-size: 2.5rem;
        color: #333333;
        text-align: center;
        margin-bottom: 0.5em;
    }

    .form {
        display: flex;
        flex-direction: column;
        align-items: center;
        gap: 1rem;
        width: 100%;
        max-width: 500px;
    }

    .inputs {
        width: 100%;
        display: flex;
        flex-direction: column;
        align-items: flex-start;
    }

    label {
        margin-bottom: 0.5rem;
        font-weight: bold;
    }

    input[type="text"] {
        width: calc(100% - 20px);
        padding: 10px;
        border: 2px solid #ccc;
        border-radius: 4px;
        box-sizing: border-box;
    }

    input[type="submit"],
    button {
        background-color: #0056b3;
        color: white;
        border: none;
        padding: 10px 20px;
        border-radius: 4px;
        cursor: pointer;
        transition: background-color 0.3s;
        margin: 5px;
    }

    input[type="submit"]:hover,
    button:hover {
        background-color: #003580;
    }
</style>
